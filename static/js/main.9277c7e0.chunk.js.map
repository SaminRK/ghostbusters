{"version":3,"sources":["Game.jsx","App.js","reportWebVitals.js","index.js"],"names":["Game","props","state","rows","columns","grid","getInitialGameGrid","move","pos","getInitialPosition","colorGrid","getInitialColorGrid","bustMode","hitGrid","getInitialHitGrid","busted","bustsLeft","advanceTime","bind","toggleBustMode","Array","i","j","row","Math","floor","random","col","console","log","code","value","red","green","blue","n","this","m","max","min","newBustMode","setState","selRow","selCol","posRow","posCol","mand","abs","res","newColorGrid","newGrid","E","d","fact","newHitGrid","newBustsLeft","bust","setGridAfterSensor","ii","jj","sum","r","csum","newRow","newCol","rowStyle","width","margin","className","map","style","column","buttonText","toFixed","buttonStyle","background","getBgColor","border","getColor","onClick","handleClick","href","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9277c7e0.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Game.css\";\n\nclass Game extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\trows: 10,\n\t\t\tcolumns: 10,\n\t\t\tgrid: this.getInitialGameGrid(10, 10),\n\t\t\tmove: [\n\t\t\t\t[1, 30, 1],\n\t\t\t\t[30, 1, 30],\n\t\t\t\t[1, 30, 1],\n\t\t\t],\n\t\t\tpos: this.getInitialPosition(10, 10),\n\t\t\tcolorGrid: this.getInitialColorGrid(10, 10),\n\t\t\tbustMode: false,\n\t\t\thitGrid: this.getInitialHitGrid(10, 10),\n\t\t\tbusted: false,\n\t\t\tbustsLeft: 3,\n\t\t};\n\n\t\tthis.advanceTime = this.advanceTime.bind(this);\n\t\tthis.toggleBustMode = this.toggleBustMode.bind(this);\n\t}\n\n\tgetInitialHitGrid(rows, columns) {\n\t\tvar grid = new Array(rows);\n\t\tfor (var i = 0; i < rows; ++i) {\n\t\t\tgrid[i] = [];\n\t\t\tfor (var j = 0; j < columns; ++j) {\n\t\t\t\tgrid[i][j] = -1;\n\t\t\t}\n\t\t}\n\t\treturn grid;\n\t}\n\n\tgetInitialGameGrid(rows, columns) {\n\t\tvar grid = new Array(rows);\n\t\tfor (var i = 0; i < rows; ++i) {\n\t\t\tgrid[i] = [];\n\t\t\tfor (var j = 0; j < columns; ++j) {\n\t\t\t\tgrid[i][j] = 1.0 / (rows * columns);\n\t\t\t}\n\t\t}\n\t\treturn grid;\n\t}\n\n\tgetInitialPosition(rows, columns) {\n\t\tvar row = Math.floor(Math.random() * rows);\n\t\tvar col = Math.floor(Math.random() * columns);\n\t\tconsole.log({ row, col });\n\t\treturn [row, col];\n\t}\n\n\tgetColor(code) {\n\t\tif (code === \"r\") return \"red\";\n\t\telse if (code === \"o\") return \"orange\";\n\t\telse if (code === \"y\") return \"yellow\";\n\t\telse if (code === \"g\") return \"green\";\n\n\t\treturn \"black\";\n\t}\n\n\tgetInitialColorGrid(rows, columns) {\n\t\tvar grid = new Array(rows);\n\t\tfor (var i = 0; i < rows; ++i) {\n\t\t\tgrid[i] = [];\n\t\t\tfor (var j = 0; j < columns; ++j) {\n\t\t\t\tgrid[i][j] = \" \";\n\t\t\t}\n\t\t}\n\t\treturn grid;\n\t}\n\n\tgetBgColor(value) {\n\t\tvar red, green, blue;\n\t\tconst n = this.state.rows;\n\t\tconst m = this.state.columns;\n\t\tif (n * m * value <= 1) {\n\t\t\tblue = Math.max(\n\t\t\t\t150,\n\t\t\t\tMath.min(255, Math.floor(n * m * value * 256))\n\t\t\t);\n\t\t} else if (value < 0.5) {\n\t\t\tblue = Math.min(255, Math.floor((1 - value) * 256));\n\t\t} else {\n\t\t\tblue = 0;\n\t\t}\n\t\tred = Math.min(255, Math.floor(value * m * 256));\n\t\tif (red + blue > 255) {\n\t\t\tgreen = 0.3 * Math.min(blue, red);\n\t\t\tblue *= 0.85;\n\t\t\tred *= 0.6;\n\t\t} else green = Math.min(blue, red);\n\n\t\treturn `rgb(${red}, ${green}, ${blue})`;\n\t}\n\n\ttoggleBustMode() {\n\t\tif (this.state.bustsLeft === 0) return;\n\t\tvar newBustMode = !this.state.bustMode;\n\t\tthis.setState({ bustMode: newBustMode });\n\t}\n\n\tsetGridAfterSensor(selRow, selCol) {\n\t\tconst posRow = this.state.pos[0];\n\t\tconst posCol = this.state.pos[1];\n\t\tconst n = this.state.rows;\n\t\tconst m = this.state.columns;\n\n\t\tconst mand = Math.abs(selCol - posCol) + Math.abs(selRow - posRow);\n\t\tvar res = \"g\";\n\t\tif (mand <= 1) res = \"r\";\n\t\telse if (mand <= 2) res = \"o\";\n\t\telse if (mand <= 4) res = \"y\";\n\n\t\tvar newColorGrid = this.state.colorGrid;\n\t\tnewColorGrid[selRow][selCol] = res;\n\n\t\tvar newGrid = new Array(n);\n\t\tvar E = new Array(n);\n\n\t\tvar i, j;\n\t\tfor (i = 0; i < n; ++i) {\n\t\t\tnewGrid[i] = [];\n\t\t\tE[i] = [];\n\t\t\tfor (j = 0; j < m; ++j) {\n\t\t\t\tnewGrid[i][j] = 0.0;\n\t\t\t\tE[i][j] = 0;\n\t\t\t}\n\t\t}\n\t\tfor (i = 0; i < n; ++i) {\n\t\t\tfor (j = 0; j < m; ++j) {\n\t\t\t\tconst d = Math.abs(selRow - i) + Math.abs(selCol - j);\n\t\t\t\tif (d <= 1) {\n\t\t\t\t\tif (res === \"r\") E[i][j] = 1;\n\t\t\t\t} else if (d <= 2) {\n\t\t\t\t\tif (res === \"o\") E[i][j] = 1;\n\t\t\t\t} else if (d <= 4) {\n\t\t\t\t\tif (res === \"y\") E[i][j] = 1;\n\t\t\t\t} else {\n\t\t\t\t\tif (res === \"g\") E[i][j] = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar fact = 0.0;\n\t\tfor (i = 0; i < n; ++i) {\n\t\t\tfor (j = 0; j < n; ++j) {\n\t\t\t\tnewGrid[i][j] = E[i][j] * this.state.grid[i][j];\n\t\t\t\tfact += newGrid[i][j];\n\t\t\t}\n\t\t}\n\t\tif (fact < 1e-18) return;\n\t\tfor (i = 0; i < n; ++i) {\n\t\t\tfor (j = 0; j < n; ++j) {\n\t\t\t\tnewGrid[i][j] /= fact;\n\t\t\t}\n\t\t}\n\t\tthis.setState({ grid: newGrid, colorGrid: newColorGrid });\n\t}\n\n\tbust(selRow, selCol) {\n\t\tvar newHitGrid = this.state.hitGrid;\n\t\tconst n = this.state.rows;\n\t\tconst m = this.state.columns;\n\t\tvar i, j;\n\t\tvar newGrid = this.state.grid;\n\t\tif (selRow === this.state.pos[0] && selCol === this.state.pos[1]) {\n\t\t\t// TODO: for 1 ghost we are making every other boxes probability 0\n\t\t\t// For multiple ghosts this might not be the case\n\t\t\tfor (i = 0; i < n; ++i) {\n\t\t\t\tfor (j = 0; j < m; ++j) {\n\t\t\t\t\tnewGrid[i][j] = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.state.hitGrid[selRow][selCol] = 1;\n\t\t\tnewGrid[selRow][selCol] = 1;\n\n\t\t} else {\n\t\t\tthis.state.hitGrid[selRow][selCol] = 0;\n\t\t\tnewGrid[selRow][selCol] = 0;\n\t\t}\n\n\t\tvar fact = 0;\n\t\tfor (i = 0; i < n; ++i) {\n\t\t\tfor (j = 0; j < m; ++j) {\n\t\t\t\tfact += newGrid[i][j];\n\t\t\t}\n\t\t}\n\t\tif (fact > 1e-18) {\n\t\t\tfor (i = 0; i < n; ++i) {\n\t\t\t\tfor (j = 0; j < m; ++j) {\n\t\t\t\t\tnewGrid[i][j] /= fact;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.state.busted = true;\n\t\tvar newBustsLeft = this.state.bustsLeft - 1;\n\t\tthis.setState({\n\t\t\thitGrid: newHitGrid,\n\t\t\tbustMode: false,\n\t\t\tbustsLeft: newBustsLeft,\n\t\t\tgrid: newGrid,\n\t\t});\n\t}\n\n\thandleClick(selRow, selCol) {\n\t\t// console.log({ selectedRow: selRow, selectedCol: selCol });\n\t\tif (this.state.bustMode) {\n\t\t\tthis.bust(selRow, selCol);\n\t\t} else {\n\t\t\tthis.setGridAfterSensor(selRow, selCol);\n\t\t}\n\t}\n\n\tadvanceTime() {\n\t\tconst n = this.state.rows;\n\t\tconst m = this.state.columns;\n\t\tconst move = this.state.move;\n\n\t\t// assign new position to ghost\n\t\tvar posRow = this.state.pos[0],\n\t\t\tposCol = this.state.pos[1];\n\t\tvar i, j, ii, jj;\n\t\tvar sum = 0;\n\n\t\tfor (ii = posRow - 1; ii <= posRow + 1; ++ii) {\n\t\t\tfor (jj = posCol - 1; jj <= posCol + 1; ++jj) {\n\t\t\t\tif (ii >= 0 && ii < n && jj >= 0 && jj < m) {\n\t\t\t\t\tsum += move[ii - posRow + 1][jj - posCol + 1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tvar r = Math.floor(Math.random() * sum);\n\t\tvar csum = 0;\n\t\tvar newRow = n - 1,\n\t\t\tnewCol = m - 1;\n\n\t\tfor (ii = posRow - 1; ii <= posRow + 1; ++ii) {\n\t\t\tfor (jj = posCol - 1; jj <= posCol + 1; ++jj) {\n\t\t\t\tif (ii >= 0 && ii < n && jj >= 0 && jj < m) {\n\t\t\t\t\tcsum += move[ii - posRow + 1][jj - posCol + 1];\n\t\t\t\t\tif (csum > r) {\n\t\t\t\t\t\tnewRow = ii;\n\t\t\t\t\t\tnewCol = jj;\n\t\t\t\t\t\tii = posRow + 100;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar newGrid = new Array(n);\n\t\tfor (i = 0; i < n; ++i) {\n\t\t\tnewGrid[i] = [];\n\t\t\tfor (j = 0; j < m; ++j) {\n\t\t\t\tnewGrid[i][j] = 0.0;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0; i < n; ++i) {\n\t\t\tfor (j = 0; j < m; ++j) {\n\t\t\t\tsum = 0;\n\t\t\t\tfor (ii = i - 1; ii <= i + 1; ++ii) {\n\t\t\t\t\tfor (jj = j - 1; jj <= j + 1; ++jj) {\n\t\t\t\t\t\tif (ii >= 0 && ii < n && jj >= 0 && jj < m) {\n\t\t\t\t\t\t\tsum += move[ii - i + 1][jj - j + 1];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (ii = i - 1; ii <= i + 1; ++ii) {\n\t\t\t\t\tfor (jj = j - 1; jj <= j + 1; ++jj) {\n\t\t\t\t\t\tif (ii >= 0 && ii < n && jj >= 0 && jj < m) {\n\t\t\t\t\t\t\tnewGrid[ii][jj] +=\n\t\t\t\t\t\t\t\t(this.state.grid[i][j] *\n\t\t\t\t\t\t\t\t\tmove[ii - i + 1][jj - j + 1]) /\n\t\t\t\t\t\t\t\tsum;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar newColorGrid = this.getInitialColorGrid(n, m);\n\t\tif (this.state.busted) {\n\t\t\tthis.state.busted = false;\n\t\t\tthis.setState({\n\t\t\t\tgrid: newGrid,\n\t\t\t\tcolorGrid: newColorGrid,\n\t\t\t\tpos: [newRow, newCol],\n\t\t\t\tbustMode: false,\n\t\t\t\thitGrid: this.getInitialHitGrid(n, m),\n\t\t\t});\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tgrid: newGrid,\n\t\t\t\tcolorGrid: newColorGrid,\n\t\t\t\tpos: [newRow, newCol],\n\t\t\t\tbustMode: false,\n\t\t\t});\n\t\t}\n\t}\n\n\trender() {\n\t\tvar rowStyle = {\n\t\t\twidth: `${75 * this.state.columns}px`,\n\t\t\tmargin: \"auto\",\n\t\t};\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"gameGrid\">\n\t\t\t\t\t{this.state.grid.map((rows, row) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div key={row} style={rowStyle}>\n\t\t\t\t\t\t\t\t{rows.map((value, column) => {\n\t\t\t\t\t\t\t\t\tvar buttonText = value.toFixed(3);\n\t\t\t\t\t\t\t\t\tvar buttonStyle = {\n\t\t\t\t\t\t\t\t\t\tbackground: this.getBgColor(\n\t\t\t\t\t\t\t\t\t\t\tthis.state.grid[row][column]\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\tthis.state.colorGrid[row][column] !==\n\t\t\t\t\t\t\t\t\t\t\" \"\n\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\tbuttonStyle.border = `4px solid ${this.getColor(\n\t\t\t\t\t\t\t\t\t\t\tthis.state.colorGrid[row][column]\n\t\t\t\t\t\t\t\t\t\t)}`;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (this.state.hitGrid[row][column] === 0) {\n\t\t\t\t\t\t\t\t\t\tbuttonStyle.background = \"green\";\n\t\t\t\t\t\t\t\t\t\tbuttonText = \"MISS\";\n\t\t\t\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\t\t\t\tthis.state.hitGrid[row][column] >= 1\n\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\tbuttonStyle.background = \"red\";\n\t\t\t\t\t\t\t\t\t\tbuttonText = \"HIT\";\n\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\tthis.state.hitGrid[row][column] > 1\n\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\tbuttonText += `${this.state.hitGrid[row][column]}`;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t// console.log(buttonStyle);\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\tkey={\n\t\t\t\t\t\t\t\t\t\t\t\trow * this.state.columns +\n\t\t\t\t\t\t\t\t\t\t\t\tcolumn\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"boxes\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={this.handleClick.bind(\n\t\t\t\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t\t\t\trow,\n\t\t\t\t\t\t\t\t\t\t\t\tcolumn\n\t\t\t\t\t\t\t\t\t\t\t)} // need to bind this, otherwise button event triggered on page load.. need to learn why\n\t\t\t\t\t\t\t\t\t\t\tstyle={buttonStyle}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{buttonText}\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\n\t\t\t\t<div>\n\t\t\t\t\t<div className=\"centraliser\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName=\"control-buttons\"\n\t\t\t\t\t\t\tonClick={this.advanceTime}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tTIME+1\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\"control-buttons bustButton\" +\n\t\t\t\t\t\t\t\t(this.state.bustMode ? \"Red\" : \"\")\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tonClick={this.toggleBustMode}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tBUST\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"centraliser\">{`POSITION: (${this.state.pos[0]}, ${this.state.pos[1]})`}</div>\n\t\t\t\t\t<div className=\"centraliser\">{`BUSTS LEFT X ${this.state.bustsLeft}`}</div>\n\t\t\t\t\t<div className=\"centraliser credit\">\n\t\t\t\t\t\tSource: The game has been taken from the course CS188:Intro to AI at UC Berkeley &nbsp;\n\t\t\t\t\t\t<a href=\"https://inst.eecs.berkeley.edu/~cs188/\">\n\t\t\t\t\t\tvisit\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Game;\n","import './App.css';\nimport Game from './Game';\n\nfunction App() {\n  return (\n    <Game></Game>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}